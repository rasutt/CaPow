Things to do:

*** First priority ***

Go through app in order and tidy up code and document it better.

Fix NA parameter inputs in sim builder from non-lambda models?  Not supposed
to use them yet, so maybe ok.  May be removing launch from data anyway.

The value in Ns is wrong, because it's based on the initial values of timeN
and timeopt?  Doesn't seem to update?  You're supposed to work out the Ns
separately and enter it.  So maybe I should just delete it when a dataset is
selected?  I dunno. Seems to be wrong though.  I guess long-term I want it to
update.  Probably not important for now though?

Do something to stop parameter inputs implied by fit models being changed in
sim builder?

Fix problem with selecting extended surveys not enabling cap prob inputs
sometimes unti switching datasets back and forth.

Stop it crashing when remove fit that is currently used in sim builder.  Just
update the input before removing it, maybe with a delay?
Update RI server to require that fits not included in any simulations, and
models and datasets not included in any fits, before removal.

*** Second priority ***

Smaller project titles in plots and summaries tab?  And power analysis tab?
  
Add E(Nt) to the power analysis and diagnostics.

Make explicit the requirement that Ns and capture probabilities are estimated,
and that only popan-lambda models are fit, for fit results to be used for
simulations and don't allow others to be selected.  Is this currently just
crashing the app?  Seems like just fills in lots of NA's which is reasonable
haha.

Display parameters held constant, calculated, in fit results?

Use max(pent[1], 0) to avoid negative values, and min(pent[1], 0) to add a
penalty to the likelihood?  Maybe use calcind in case it's not pent[1] that
should be calculated?  Definitely use constrOptim to enforce the phi < lambda
constraint.  The pent thing might not be a problem after all.

Allow datasets to be removed without removing dependent objects.  Include
checks on existence of datasets.  Really?  Or just allow Saving like that?
That's no better.

Indicate parameters that are implied by data, at least/maybe just with line
dividing parameter matrix?

Change simbuilder and other functions to use req instead of checking for null.
Could be related to below error.

Remove Ns calculator and do it automatically?  

Change code relying on phi1 to be, no, it's right for lambda models?  No, bc
phi starts at the first survey, which might not be the first time period,
though it probably should be?  popan.func and simbuilder?

Could have one removal module/function that I pass each list to, up to checks
of components to remove first?

Change default plot sizes or titles so that they're not cut off.
Also CI coverage %'s in box plots.

Change plot settings inputs in power and plot modules to follow same format,
separate tab or optionally show at top.

Display plot of expected population dynamics when model fit to dataset.  Could
do the same for power analyses, could be pretty cool and help people
understand what's going on.

Update plots to look nicer, probably with ggplot2.

Change sim builder so can't unselect surveys for existing data.

Make model module update sim builder module if possible.
Fix View Model and Sim displays to make space between lambdalambdalambda.
Make View Sim and Sim List displays show whether/which dataset/fit included.

Make sim function allocate capture histories to animals for which they are
more likely.  I think this might be important considering the bias in the
estimate of phi for the "est" setting of the Maui work.  Though now thinking
that's just because difficult scenario, as seems to go in same direction as
running the same thing without the data.  But seems to happen for rat data
whereas it has no problem without the data...  Doesn't look good.

Check that sim function attribution function is efficient.
Report number of capture history attribution failures or something.

Stop survey checkboxes in model and sim builders continuously updating when
double-clicked. Seems to be due to renderUI changing inputs.  May not be
solvable in Shiny yet.  Maybe using req()?